---
- name: Ensure required dependencies are installed
  apt:
    name:
      - wget
      - lz4
    state: present
  become: yes

- name: Download Story binary
  get_url:
    url: "{{ story_binary_url }}"
    dest: "{{ story_binary_path }}"
    mode: '0755'
    owner: "root"
    group: "root"

- name: Create story directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ story_user }}"
    group: "{{ story_user }}"
    mode: '0755'
  with_items:
    - "{{ base_dir }}/story"
    - "{{ base_dir }}/story/config"
    - "{{ story_data_dir }}"

# --- Initialize Node If Not Already Done ---
- name: Check if Story node is initialized
  stat:
    path: "{{ base_dir }}/story/config/genesis.json"
  register: genesis_file

- name: Initialize Story node
  command: "{{ story_binary_path }} init --network {{ story_network }}"
  when: not genesis_file.stat.exists

# --- JWT Steps ---

- name: Check if JWT secret exists on execution node
  stat:
    path: "{{ jwt_secret_path }}"
  register: jwt_secret_file
  delegate_to: "{{ groups['execution_nodes'][0] }}"

- name: Fetch JWT secret from execution node
  fetch:
    src: "{{ jwt_secret_path }}"
    dest: "/tmp/jwt.hex"
    flat: yes
  when: jwt_secret_file.stat.exists
  delegate_to: "{{ groups['execution_nodes'][0] }}"

- name: Copy JWT secret to consensus node
  copy:
    src: "/tmp/jwt.hex"
    dest: "{{ jwt_secret_path }}"
    owner: "{{ story_user }}"
    group: "{{ story_user }}"
    mode: '0644'
  when: jwt_secret_file.stat.exists

# --- Snapshot Steps ---

- name: Back up priv_validator_state.json if exists
  shell: |
    cp "{{ story_data_dir }}/priv_validator_state.json" "{{ story_data_dir }}/../priv_validator_state.json"
  args:
    creates: "{{ story_data_dir }}/../priv_validator_state.json"
  become: yes
  ignore_errors: true

- name: Stop Story service before resetting node
  systemd:
    name: story
    state: stopped
  become: yes

- name: Download snapshot for Story Consensus
  shell: |
    wget -O "{{ story_snapshot_dest }}" "{{ story_snapshot_url }}" --inet4-only
  args:
    chdir: "/tmp"
  become: yes

- name: Decompress snapshot directly to data directory
  shell: |
    lz4 -c -d "{{ story_snapshot_dest }}" > "{{ story_data_dir }}/data"
  become: yes

- name: Restore priv_validator_state.json if it was backed up
  shell: |
    cp "{{ story_data_dir }}/../priv_validator_state.json" "{{ story_data_dir }}/priv_validator_state.json"
  args:
    creates: "{{ story_data_dir }}/priv_validator_state.json"
  become: yes
  ignore_errors: true

- name: Start Story service
  systemd:
    name: story
    state: started
    enabled: yes
    daemon_reload: yes
  become: yes

- name: Remove downloaded snapshot to free up space
  file:
    path: "{{ story_snapshot_dest }}"
    state: absent
  become: yes

# - name: Verify Story service status
#   shell: |
#     sudo systemctl status story
#   register: service_status
#   ignore_errors: true
