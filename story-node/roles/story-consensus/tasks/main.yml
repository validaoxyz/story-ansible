# roles/story-consensus/tasks/main.yml
---
- name: Download Story binary
  get_url:
    url: "{{ story_binary_url }}"
    dest: "{{ story_binary_path }}"
    mode: '0755'
    owner: "root"
    group: "root"

- name: Create story directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ story_user }}"
    group: "{{ story_user }}"
    mode: '0755'
  with_items:
    - "{{ base_dir }}/story"
    - "{{ base_dir }}/story/config"
    - "/var/lib/story"

- name: Check if JWT secret exists on execution node
  stat:
    path: "{{ jwt_secret_path }}"
  register: jwt_secret_file
  delegate_to: "{{ groups['execution_nodes'][0] }}"

- name: Fetch JWT secret from execution node
  fetch:
    src: "{{ jwt_secret_path }}"
    dest: "/tmp/jwt.hex"
    flat: yes
  when: jwt_secret_file.stat.exists
  delegate_to: "{{ groups['execution_nodes'][0] }}"

- name: Copy JWT secret to consensus node
  copy:
    src: "/tmp/jwt.hex"
    dest: "{{ jwt_secret_path }}"
    owner: "{{ story_user }}"
    group: "{{ story_user }}"
    mode: '0644'
  when: jwt_secret_file.stat.exists

- name: Initialize Story node
  become_user: "{{ story_user }}"
  command: "{{ story_binary_path }} init --network {{ story_network }}"
  args:
    creates: "{{ base_dir }}/story/config/genesis.json"
  environment:
    HOME: "{{ base_dir }}/story"

- name: Wait for config directory to be created
  wait_for:
    path: "{{ base_dir }}/story/config"
    state: present
    timeout: 30

- name: Configure story client
  template:
    src: "config.yaml.j2"
    dest: "{{ base_dir }}/story/config/config.yaml"
    owner: "{{ story_user }}"
    group: "{{ story_user }}"
    mode: '0644'

- name: Create Story service
  template:
    src: story.service.j2
    dest: /etc/systemd/system/story.service
    mode: '0644'

- name: Start and enable Story service
  systemd:
    name: story
    state: started
    enabled: yes
    daemon_reload: yes
