# roles/story-consensus/tasks/main.yml
---

- name: Get external IP
  uri:
    url: http://ifconfig.me/ip
    return_content: yes
  register: external_ip

- name: Create Story directories
  file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
  with_items:
    - "{{ home_dir }}/story"
    - "{{ home_dir }}/story/config"
    - "{{ home_dir }}/story/cosmovisor/genesis/bin"
    - "{{ home_dir }}/story/cosmovisor/upgrades/{{ story_version }}/bin"
    - "{{ home_dir }}/geth"
  become: yes

- name: Download Story binary
  get_url:
    url: "https://github.com/piplabs/story/releases/download/{{ story_version }}/story-linux-amd64"
    dest: "/home/{{ ansible_user }}/story-binary"
    mode: '0755'
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
  become: yes

- name: Copy Story binary to Cosmovisor directories
  copy:
    src: "/home/{{ ansible_user }}/story-binary"
    dest: "{{ item }}"
    remote_src: yes
    mode: '0755'
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
  with_items:
    - "{{ home_dir }}/story/cosmovisor/genesis/bin/story"
    - "{{ home_dir }}/story/cosmovisor/upgrades/{{ story_version }}/bin/story"
  become: yes

- name: Clean up temporary binary
  file:
    path: "/home/{{ ansible_user }}/story-binary"
    state: absent

- name: Initialize Story node
  shell: |
    source /home/{{ ansible_user }}/.bash_profile
    "{{ home_dir }}/story/cosmovisor/genesis/bin/story" init --moniker {{ moniker }} --network odyssey
  args:
    executable: /bin/bash
  become: yes
  become_user: "{{ ansible_user }}"

- name: Configure config.toml
  template:
    src: config.toml.j2
    dest: "{{ home_dir }}/story/config/config.toml"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0644'
  become: yes

- name: Download genesis and addrbook
  get_url:
    url: "{{ item.url }}"
    dest: "{{ item.dest }}"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
  with_items:
    - { url: "https://server-3.itrocket.net/testnet/story/genesis.json", dest: "{{ home_dir }}/story/config/genesis.json" }
    - { url: "https://server-3.itrocket.net/testnet/story/addrbook.json", dest: "{{ home_dir }}/story/config/addrbook.json" }
  become: yes

- name: Create Story service file
  template:
    src: story.service.j2
    dest: /etc/systemd/system/story.service
    mode: '0644'
  become: yes

- name: Verify binaries exist
  stat:
    path: "{{ item }}"
  with_items:
    - "{{ home_dir }}/story/cosmovisor/genesis/bin/story"
    - "{{ home_dir }}/story/cosmovisor/upgrades/{{ story_version }}/bin/story"
  register: binary_check

- name: Ensure binaries are present
  fail:
    msg: "Story binary is missing in {{ item.item }}"
  when: not item.stat.exists
  with_items: "{{ binary_check.results }}"